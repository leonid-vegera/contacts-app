{"version":3,"sources":["App.jsx","index.jsx"],"names":["App","useState","contacts","setContacts","selectedId","setSelectedId","selectedPerson","find","contact","id","className","length","AddContactForm","name","setName","number","setNumber","email","setEmail","onSubmit","event","preventDefault","newContact","Date","addContact","type","placeholder","value","onChange","target","required","ContactsList","map","toUpperCase","onClick","filter","item","disabled","ContactInfo","entries","Object","console","log","Math","random","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.23f49b5e.chunk.js","sourcesContent":["/* eslint-disable */\nimport React, { useState } from 'react';\nimport './App.scss';\n\nfunction App() {\n  const [contacts, setContacts] = useState([]);\n  const [selectedId, setSelectedId] = useState(0);\n\n  const selectedPerson = contacts.find(contact => (\n    contact.id === selectedId\n  ))\n\n  return (\n    <div className=\"main\">\n      {/* <h1>Contacts</h1> */}\n\n      <div className=\"main-left\">\n        <AddContactForm\n          contacts={contacts}\n          setContacts={setContacts}\n        />\n        {contacts.length === 0 ? (\n          <h2 className=\"title\">No contacts added yet</h2>\n        ) : (\n          <ContactsList\n            contacts={contacts}\n            setContacts={setContacts}\n            setSelectedId={setSelectedId}\n            selectedId={selectedId}\n          />\n        )}\n      </div>\n\n      {selectedId !== 0 && (\n        <div className=\"main-right\">\n          <ContactInfo contact={selectedPerson} />\n        </div>\n      )}\n\n      \n    </div>\n  );\n}\n\nexport default App;\n\nconst AddContactForm = ({ setContacts, contacts }) => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const [email, setEmail] = useState('');\n\n  const addContact = (name, number, email) => {\n    const newContact = {\n      name,\n      number,\n      email,\n      id: +new Date(),\n    };\n    setContacts(\n      [...contacts,\n        newContact\n      ]\n    )\n  }\n\n  const clearFields = () => {\n    setName('');\n    setNumber('');\n    setEmail('');\n  }\n\n  const submitHandler = (event) => {\n    event.preventDefault();\n    addContact(name, number, email);\n    clearFields();\n  }\n\n  return (\n    <form\n      className=\"add-form\"\n      onSubmit={submitHandler}\n    >\n      <h2 className=\"title\">New contact form</h2>\n      <div className=\"add-field\">\n        <label>\n          Person's name\n          <div>\n            <input\n              type=\"text\"\n              name=\"name\"\n              placeholder=\"Enter new name\"\n              value={name}\n              onChange={(event) => {\n                setName(event.target.value)\n              }}\n              required\n            />\n          </div>\n        </label>\n      </div>\n\n      <div>\n        <label>\n          Person's phone number\n          <div className=\"add-field\">\n            <input\n              type=\"tel\"\n              // pattern=\"[0-9]{10}\"\n              name=\"number\"\n              placeholder=\"Enter phone number\"\n              value={number}\n              onChange={(event) => {\n                setNumber(event.target.value)\n              }}\n              // required\n            />\n          </div>\n        </label>\n      </div>\n\n      <div>\n        <label>\n          Person's e-mail\n          <div className=\"add-field\">\n            <input\n              type=\"email\"\n              name=\"email\"\n              placeholder=\"Enter e-mail\"\n              value={email}\n              onChange={(event) => {\n                setEmail(event.target.value)\n              }}\n              // required\n            />\n          </div>\n        </label>\n      </div>\n\n      <div>\n        <button\n          type=\"submit\"\n        >\n          Add contact\n        </button>\n      </div>\n\n    </form>\n  );\n};\n\nconst ContactsList = ({ contacts, setContacts, setSelectedId, selectedId }) => {\n  return (\n    <>\n      \n      <div className=\"contacts-list\">\n        <h2 className=\"title\">Contacts</h2>\n        {contacts.map(contact => (\n          <div key={contact.id} className=\"contacts-item\">\n            <strong>{contact.name.toUpperCase()}</strong>\n            <div className=\"contacts-list-buttons\">\n              <button\n                className=\"contacts-list-button\"\n                onClick={() => {\n                  setContacts(contacts.filter(item => (\n                    contact.id !== item.id\n                  )))\n                }}\n                disabled={contact.id === selectedId}\n              >\n                Delete\n              </button>\n              {contact.id !== selectedId ? (\n                <button\n                  className=\"contacts-list-button\"\n                  onClick={() => {\n                    setSelectedId(contact.id)\n                  }}\n                >\n                  Open\n                </button>\n              ) : (\n                <button\n                  className=\"contacts-list-button\"\n                  onClick={() => {\n                    setSelectedId(0)\n                  }}\n                >\n                  Close\n                </button>\n              )}\n\n            </div>\n          </div>\n        ))}\n      </div >\n    </>\n  )\n};\n\nconst ContactInfo = ({ contact }) => {\n  let entries = null;\n  if (!contact) {\n    return;\n  }\n  entries = Object.entries(contact);\n  \n  console.log(entries);\n  return (\n    <div className=\"contact-info\">\n      <h2 className=\"title\">Contact information</h2>\n      {entries.map(item => (\n        <section\n          key={Math.random()}\n          className=\"contact-info-list\"\n        >\n          <div className=\"contact-info-key\">{item[0]}</div>\n          <div>{item[1]}</div>\n        </section>\n      ))}\n    </div>\n  )\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.scss';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}