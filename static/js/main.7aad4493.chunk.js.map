{"version":3,"sources":["components/AddContactForm/AddContactForm.jsx","components/ContactsList/ContactsList.jsx","components/ContactInfo/ContactInfo.jsx","App.jsx","index.jsx"],"names":["AddContactForm","setContacts","contacts","useState","name","setName","number","setNumber","email","setEmail","className","onSubmit","event","preventDefault","newContact","id","Date","addContact","type","placeholder","value","onChange","target","required","ContactsList","setSelectedId","selectedId","removeContact","map","contact","toUpperCase","onClick","disabled","ContactInfo","entries","Object","console","log","item","Math","random","App","selectedPerson","find","length","contactId","confirm","filter","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.7aad4493.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport './AddContactForm.scss';\n\nexport const AddContactForm = ({ setContacts, contacts }) => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const [email, setEmail] = useState('');\n\n  const addContact = (name, number, email) => {\n    const newContact = {\n      name,\n      number,\n      email,\n      id: +new Date(),\n    };\n    setContacts(\n      [...contacts,\n        newContact\n      ]\n    )\n  }\n\n  const clearFields = () => {\n    setName('');\n    setNumber('');\n    setEmail('');\n  }\n\n  const submitHandler = (event) => {\n    event.preventDefault();\n    addContact(name, number, email);\n    clearFields();\n  }\n\n  return (\n    <form\n      className=\"add-form\"\n      onSubmit={submitHandler}\n    >\n      <h2 className=\"title\">New contact form</h2>\n      <div className=\"add-field\">\n        <label>\n          Person's name\n          <div>\n            <input\n              type=\"text\"\n              name=\"name\"\n              placeholder=\"Enter new name\"\n              value={name}\n              onChange={(event) => {\n                setName(event.target.value)\n              }}\n              required\n            />\n          </div>\n        </label>\n      </div>\n\n      <div>\n        <label>\n          Person's phone number\n          <div className=\"add-field\">\n            <input\n              type=\"tel\"\n              // pattern=\"[0-9]{10}\"\n              name=\"number\"\n              placeholder=\"Enter phone number\"\n              value={number}\n              onChange={(event) => {\n                setNumber(event.target.value)\n              }}\n            // required\n            />\n          </div>\n        </label>\n      </div>\n\n      <div>\n        <label>\n          Person's e-mail\n          <div className=\"add-field\">\n            <input\n              type=\"email\"\n              name=\"email\"\n              placeholder=\"Enter e-mail\"\n              value={email}\n              onChange={(event) => {\n                setEmail(event.target.value)\n              }}\n            // required\n            />\n          </div>\n        </label>\n      </div>\n\n      <div>\n        <button\n          type=\"submit\"\n          className=\"button\"\n        >\n          Add contact\n        </button>\n      </div>\n\n    </form>\n  );\n};\n","import React from 'react';\nimport './ContactsList.scss';\n\nexport const ContactsList = ({ contacts, setSelectedId, selectedId, removeContact }) => {\n  return (\n    <div className=\"contacts-list\">\n      <h2 className=\"title\">Contacts</h2>\n      {contacts.map(contact => (\n        <div key={contact.id} className=\"contacts-item\">\n          <strong>{contact.name.toUpperCase()}</strong>\n          <div className=\"contacts-list-buttons\">\n\n            <button\n              type=\"button\"\n              className=\"button contacts-list-button\"\n              onClick={() => {\n                removeContact(contact.id)\n              }}\n              disabled={contact.id === selectedId}\n            >\n              Delete\n            </button>\n\n            {contact.id !== selectedId ? (\n              <button\n                type=\"button\"\n                className=\"button contacts-list-button\"\n                onClick={() => {\n                  setSelectedId(contact.id)\n                }}\n              >\n                Open\n              </button>\n            ) : (\n              <button\n                type=\"button\"\n                className=\"button contacts-list-button\"\n                onClick={() => {\n                  setSelectedId(0)\n                }}\n              >\n                Close\n              </button>\n            )}\n\n          </div>\n        </div>\n      ))}\n    </div >\n  )\n};\n","import React from 'react';\nimport './ContactInfo.scss';\n\nexport const ContactInfo = ({ contact }) => {\n  let entries = null;\n  if (!contact) {\n    return;\n  }\n  entries = Object.entries(contact);\n\n  console.log(entries);\n  return (\n    <div className=\"contact-info\">\n      <h2 className=\"title\">Contact information</h2>\n      {entries.map(item => (\n        <section\n          key={Math.random()}\n          className=\"contact-info-list\"\n        >\n          <div className=\"contact-info-key\">{item[0] !== 'id' ? item[0] : ''}</div>\n          <div className=\"contact-info-value\">{item[0] !== 'id' ? item[1] : ''}</div>\n        </section>\n      ))}\n    </div>\n  )\n};\n","import React, { useState } from 'react';\nimport './App.scss';\nimport { AddContactForm } from './components/AddContactForm';\nimport { ContactsList } from './components/ContactsList';\nimport { ContactInfo } from './components/ContactInfo';\n\nfunction App() {\n  const [contacts, setContacts] = useState([]);\n  const [selectedId, setSelectedId] = useState(0);\n\n  const selectedPerson = contacts.find(contact => (\n    contact.id === selectedId\n  ))\n\n  const removeContact = (contactId) => {\n    /* eslint-disable-next-line */\n    const result = confirm('Do you really want to delete this contact?')\n    if (result) {\n      setContacts(contacts.filter(item => (\n        contactId !== item.id\n      )))\n    }\n  }\n\n  return (\n    <div className=\"main\">\n      <div className=\"main-left\">\n        <AddContactForm\n          contacts={contacts}\n          setContacts={setContacts}\n        />\n        {contacts.length === 0 ? (\n          <h2 className=\"title\">No contacts added yet</h2>\n        ) : (\n          <ContactsList\n            contacts={contacts}\n            setSelectedId={setSelectedId}\n            selectedId={selectedId}\n            removeContact={removeContact}\n          />\n        )}\n      </div>\n\n      {selectedId !== 0 && (\n        <div className=\"main-right\">\n          <ContactInfo contact={selectedPerson} />\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.scss';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}